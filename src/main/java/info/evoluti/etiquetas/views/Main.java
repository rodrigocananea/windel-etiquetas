/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package info.evoluti.etiquetas.views;

import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.intellijthemes.FlatOneDarkIJTheme;
import static info.evoluti.etiquetas.Etiquetas.EProp;
import info.evoluti.etiquetas.controllers.ControllerData;
import info.evoluti.etiquetas.models.ModelEmpresa;
import info.evoluti.etiquetas.models.ModelEtqProd;
import info.evoluti.etiquetas.utils.Database;
import info.evoluti.etiquetas.utils.EConst;
import info.evoluti.etiquetas.utils.PrinterService;
import info.evoluti.etiquetas.utils.Util;
import info.evoluti.etiquetas.utils.components.TableSelectAllOnEditing;
import info.evoluti.etiquetas.utils.jaspersoft.FileTypeFilter;
import info.evoluti.etiquetas.utils.jaspersoft.MyJRViewer;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.Window;
import java.awt.event.ItemEvent;
import java.awt.event.MouseEvent;
import java.awt.print.PrinterJob;
import java.io.File;
import java.net.URI;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import net.sf.jasperreports.engine.JasperPrint;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.exception.ExceptionUtils;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;

/**
 *
 * @author Rodrigo
 */
public final class Main extends javax.swing.JFrame {

    final static Logger logger = Logger.getLogger("");

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        logger.setLevel(Level.INFO);

        setIconImage(EConst.ICON_SYSTEM);

        String theme = EProp.prop().getString("tema", "Dark");
        if (theme.equals("Dark")) {
            jrbmDark.setSelected(true);
            jrbmLight.setSelected(false);
        } else if (theme.equals("Light")) {
            jrbmDark.setSelected(false);
            jrbmLight.setSelected(true);
        }

//        jbInfo.putClientProperty("JButton.buttonType", "roundRect");
        jcbCampoOrdem.setSelectedItem(EProp.prop().getString("etiquetas.campo.ordenar", "Código"));
        jcbOrdem.setSelectedItem(EProp.prop().getString("etiquetas.ordenar.tipo", "ASC"));
        jcbFiltro.setSelectedItem(EProp.prop().getString("etiquetas.filtro", "Descrição"));
        jcbExibirProdutosBarras.setSelected(EProp.prop().getBoolean("etiquetas.exibir.sembarras", false));
        jtfArquivoJasper.setText(EProp.prop().getString("etiquetas.arquivo.jasper", ""));
        
        impressoras();
        getEmpresas(EProp.prop().getInt("etiquetas.empresa", 1));
        carregarProdutos();

    }

    public void impressoras() {
        jcbImpressoras.removeAllItems();
        jcbImpressoras.addItem("<selecione>");
        for (javax.print.PrintService p : PrinterJob.lookupPrintServices()) {
            jcbImpressoras.addItem(p.getName());
        }
        jcbImpressoras.setSelectedItem(EProp.prop().getString("etiquetas.impressora", "<selecione>"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbAdicionar_Todos = new javax.swing.JButton();
        jbAdicionar = new javax.swing.JButton();
        jbRemover = new javax.swing.JButton();
        jbRemover_Todos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new TableSelectAllOnEditing();
        jPanel3 = new javax.swing.JPanel();
        jbVisualizar1 = new javax.swing.JButton();
        jtfPesquisar = new javax.swing.JTextField();
        jbVisualizar = new javax.swing.JButton();
        jcbFiltro = new javax.swing.JComboBox<>();
        jbCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbCampoOrdem = new javax.swing.JComboBox<>();
        jcbOrdem = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jcbExibirProdutosBarras = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jcbEmpresa = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbImpressoras = new javax.swing.JComboBox<>();
        jbSalvarOpc = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtfArquivoJasper = new javax.swing.JTextField();
        jbBuscarArquivoJasper = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jrbmDark = new javax.swing.JRadioButtonMenuItem();
        jrbmLight = new javax.swing.JRadioButtonMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Simple Import");
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(1124, 524));
        setPreferredSize(new java.awt.Dimension(1124, 524));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 1, 1, 1));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Barras", "Descrição", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(60);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(1).setMinWidth(0);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(3).setMinWidth(0);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        jbAdicionar_Todos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_double_right_20px.png"))); // NOI18N
        jbAdicionar_Todos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAdicionar_Todos.setFocusable(false);
        jbAdicionar_Todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionar_TodosActionPerformed(evt);
            }
        });

        jbAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_forward_20px.png"))); // NOI18N
        jbAdicionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbAdicionar.setFocusable(false);
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jbRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_back_20px.png"))); // NOI18N
        jbRemover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbRemover.setFocusable(false);
        jbRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverActionPerformed(evt);
            }
        });

        jbRemover_Todos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_double_left_20px.png"))); // NOI18N
        jbRemover_Todos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbRemover_Todos.setFocusable(false);
        jbRemover_Todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemover_TodosActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Barras", "Descrição", "Valor", "Quantidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable2FocusLost(evt);
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jTable2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable2PropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setMinWidth(60);
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(60);
            jTable2.getColumnModel().getColumn(0).setMaxWidth(60);
            jTable2.getColumnModel().getColumn(1).setMinWidth(0);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(0);
            jTable2.getColumnModel().getColumn(1).setMaxWidth(0);
            jTable2.getColumnModel().getColumn(3).setMinWidth(0);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable2.getColumnModel().getColumn(3).setMaxWidth(0);
            jTable2.getColumnModel().getColumn(4).setMinWidth(80);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(4).setMaxWidth(80);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jbAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbAdicionar_Todos, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbRemover_Todos, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbAdicionar_Todos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemover_Todos)
                        .addGap(0, 153, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel7.add(jPanel2, java.awt.BorderLayout.CENTER);

        jbVisualizar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_print_20px.png"))); // NOI18N
        jbVisualizar1.setText("Imprimir");
        jbVisualizar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbVisualizar1.setFocusable(false);
        jbVisualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVisualizar1ActionPerformed(evt);
            }
        });

        jtfPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisarKeyReleased(evt);
            }
        });

        jbVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_eye_20px.png"))); // NOI18N
        jbVisualizar.setText("Visualizar");
        jbVisualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbVisualizar.setFocusable(false);
        jbVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVisualizarActionPerformed(evt);
            }
        });

        jcbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Descrição" }));
        jcbFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFiltroItemStateChanged(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_cancel_20px.png"))); // NOI18N
        jbCancelar.setText("Fechar");
        jbCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbCancelar.setFocusable(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Filtrar:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Ordenar:");

        jcbCampoOrdem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Descrição", "Estoque", "Valor de Venda" }));
        jcbCampoOrdem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCampoOrdemItemStateChanged(evt);
            }
        });

        jcbOrdem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ASC", "DESC" }));
        jcbOrdem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbOrdemItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Tipo:");

        jcbExibirProdutosBarras.setText("Exibir produtos sem códigos de barras");
        jcbExibirProdutosBarras.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbExibirProdutosBarrasItemStateChanged(evt);
            }
        });
        jcbExibirProdutosBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbExibirProdutosBarrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jcbCampoOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jcbOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                        .addComponent(jcbExibirProdutosBarras))
                    .addComponent(jtfPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbVisualizar1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbVisualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCancelar)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbExibirProdutosBarras))
                                .addGap(3, 3, 3))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbCancelar)
                            .addComponent(jbVisualizar)
                            .addComponent(jbVisualizar1)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2)
                        .addComponent(jcbOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(2, 2, 2)
                        .addComponent(jcbCampoOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel3, java.awt.BorderLayout.SOUTH);

        jTabbedPane2.addTab("Etiquetas", jPanel7);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Empresa:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Impressora:");

        jbSalvarOpc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_save_20px.png"))); // NOI18N
        jbSalvarOpc.setText("Salvar opções");
        jbSalvarOpc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSalvarOpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarOpcActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Arquivo para impressão (.jasper):");

        jbBuscarArquivoJasper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_search_20px.png"))); // NOI18N
        jbBuscarArquivoJasper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarArquivoJasperActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jtfArquivoJasper, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbBuscarArquivoJasper, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jbSalvarOpc)
                    .addComponent(jcbImpressoras, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(675, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbImpressoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfArquivoJasper, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscarArquivoJasper, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbSalvarOpc)
                .addContainerGap(187, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Opções", jPanel6);

        jPanel1.add(jTabbedPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Arquivo");

        jMenu3.setText("Tema");

        buttonGroup1.add(jrbmDark);
        jrbmDark.setSelected(true);
        jrbmDark.setText("Escuro");
        jrbmDark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbmDarkActionPerformed(evt);
            }
        });
        jMenu3.add(jrbmDark);

        buttonGroup1.add(jrbmLight);
        jrbmLight.setText("Claro");
        jrbmLight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbmLightActionPerformed(evt);
            }
        });
        jMenu3.add(jrbmLight);

        jMenu1.add(jMenu3);
        jMenu1.add(jSeparator1);

        jmiExit.setText("Sair");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        jMenu1.add(jmiExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Sobre");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_github_20px.png"))); // NOI18N
        jMenuItem1.setText("Github");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jrbmLightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbmLightActionPerformed
        changeTheme("Light");
    }//GEN-LAST:event_jrbmLightActionPerformed

    private void jrbmDarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbmDarkActionPerformed
        changeTheme("Dark");
    }//GEN-LAST:event_jrbmDarkActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            URI uri = URI.create("https://github.com/rodrigocananea/simple-import-windel");
            java.awt.Desktop.getDesktop().browse(uri);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao abrir navegador, motivo:\n"
                    + ex.getMessage());
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
        exitSystem();
    }//GEN-LAST:event_jmiExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        exitSystem();
    }//GEN-LAST:event_formWindowClosing

    private void jbVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVisualizarActionPerformed
        if (jTable2.getRowCount() > 0) {
            List<ModelEtqProd> listaProd_rel = getListaEtqProd();

            gerarRelatorio(listaProd_rel);
        }
    }//GEN-LAST:event_jbVisualizarActionPerformed

    private List<ModelEtqProd> getListaEtqProd() {
        List<ModelEtqProd> listaProd_rel = new ArrayList<>();
        try {
            ModelEmpresa empresa = (ModelEmpresa) jcbEmpresa.getSelectedItem();
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                int id = Integer.parseInt(String.valueOf(jTable2.getValueAt(i, 0)));
                String barras = String.valueOf(jTable2.getValueAt(i, 1));
                String nome = String.valueOf(jTable2.getValueAt(i, 2));
                Double valor = Double.parseDouble(String.valueOf(jTable2.getValueAt(i, 3)));
                int quantidade = Integer.parseInt(String.valueOf(jTable2.getValueAt(i, 4)));
                for (int z = 1; z <= quantidade; z++) {
                    ModelEtqProd prod = new ModelEtqProd(id, barras, nome, valor, empresa.getFantasia(), empresa.getTelefone());
                    listaProd_rel.add(prod);
                }
            }

        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return listaProd_rel;
    }

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        exitSystem();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
            jbAdicionar.doClick();
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void jbAdicionar_TodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionar_TodosActionPerformed
        DefaultTableModel tabela = (DefaultTableModel) jTable2.getModel();
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            String id = String.valueOf(jTable1.getValueAt(i, 0));
            String barras = String.valueOf(jTable1.getValueAt(i, 1));
            String nome = String.valueOf(jTable1.getValueAt(i, 2));
            String valor = String.valueOf(jTable1.getValueAt(i, 3));
            tabela.addRow(new String[]{id, barras, nome, valor, "1"});
        }
        while (jTable1.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTable1.getModel()).removeRow(0);
        }
    }//GEN-LAST:event_jbAdicionar_TodosActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        int linha = jTable1.getSelectedRow();
        if (linha != -1) {
            String id = String.valueOf(jTable1.getValueAt(linha, 0));
            String barras = String.valueOf(jTable1.getValueAt(linha, 1));
            String nome = String.valueOf(jTable1.getValueAt(linha, 2));
            String valor = String.valueOf(jTable1.getValueAt(linha, 3));

            DefaultTableModel tabela = (DefaultTableModel) jTable2.getModel();
            tabela.addRow(new String[]{id, barras, nome, valor, "1"});

            DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
            table.removeRow(linha);

            int totalLinhas = table.getRowCount();

            if (linha == 0 && totalLinhas > 0) {
                jTable1.requestFocus();
                jTable1.setRowSelectionInterval(linha, linha);
            } else if (totalLinhas != 0 && totalLinhas <= linha) {
                linha = linha - 1;
                jTable1.requestFocus();
                jTable1.setRowSelectionInterval(linha, linha);
            } else if (totalLinhas != 0) {
                jTable1.requestFocus();
                jTable1.setRowSelectionInterval(linha, linha);
            }
        }
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jbRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverActionPerformed
        int linha = jTable2.getSelectedRow();
        if (linha != -1) {
            String id = String.valueOf(jTable2.getValueAt(linha, 0));
            String barras = String.valueOf(jTable2.getValueAt(linha, 1));
            String nome = String.valueOf(jTable2.getValueAt(linha, 2));
            String valor = String.valueOf(jTable2.getValueAt(linha, 3));

            DefaultTableModel tabela = (DefaultTableModel) jTable1.getModel();
            tabela.addRow(new String[]{id, barras, nome, valor});

            DefaultTableModel table = (DefaultTableModel) jTable2.getModel();
            table.removeRow(linha);

            int totalLinhas = table.getRowCount();

            if (linha == 0 && totalLinhas > 0) {
                jTable2.requestFocus();
                jTable2.setRowSelectionInterval(linha, linha);
            } else if (totalLinhas != 0 && totalLinhas <= linha) {
                linha = linha - 1;
                jTable2.requestFocus();
                jTable2.setRowSelectionInterval(linha, linha);
            } else if (totalLinhas != 0) {
                jTable2.requestFocus();
                jTable2.setRowSelectionInterval(linha, linha);
            }
        }
    }//GEN-LAST:event_jbRemoverActionPerformed

    private void jbRemover_TodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemover_TodosActionPerformed
        DefaultTableModel tabela = (DefaultTableModel) jTable1.getModel();
        for (int i = 0; i < jTable2.getRowCount(); i++) {
            String id = String.valueOf(jTable2.getValueAt(i, 0));
            String barras = String.valueOf(jTable2.getValueAt(i, 1));
            String nome = String.valueOf(jTable2.getValueAt(i, 2));
            String valor = String.valueOf(jTable2.getValueAt(i, 3));
            tabela.addRow(new String[]{id, barras, nome, valor});
        }
        while (jTable2.getModel().getRowCount() > 0) {
            ((DefaultTableModel) jTable2.getModel()).removeRow(0);
        }
    }//GEN-LAST:event_jbRemover_TodosActionPerformed

    private void jTable2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable2FocusLost
        jTable2.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
    }//GEN-LAST:event_jTable2FocusLost

    private void jTable2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable2PropertyChange
        formatoQtdItem();
    }//GEN-LAST:event_jTable2PropertyChange

    private void jtfPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisarKeyReleased
        carregarProdutos();
    }//GEN-LAST:event_jtfPesquisarKeyReleased

    private void jbVisualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVisualizar1ActionPerformed
        try {
            List<ModelEtqProd> lista = getListaEtqProd();
            JasperPrint jp = Util.getJasperPrintEtq(lista);
            PrinterService.impressaoDireta(jp);
        } catch (Exception ex) {
            logger.error(ExceptionUtils.getStackTrace(ex));
        }

    }//GEN-LAST:event_jbVisualizar1ActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        int column = jTable2.getSelectedColumn();
        if ((evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1)
                && column == 0) {
            jbRemover.doClick();
        }
    }//GEN-LAST:event_jTable2MousePressed

    private void jbSalvarOpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarOpcActionPerformed
        EProp.setProp("etiquetas.empresa", String.valueOf(((ModelEmpresa) jcbEmpresa.getSelectedItem()).getId()));
        EProp.setProp("etiquetas.impressora", jcbImpressoras.getSelectedItem().toString());
        EProp.setProp("etiquetas.arquivo.jasper", jtfArquivoJasper.getText());
    }//GEN-LAST:event_jbSalvarOpcActionPerformed

    private void jcbCampoOrdemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCampoOrdemItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            EProp.setProp("etiquetas.campo.ordenar", jcbCampoOrdem.getSelectedItem().toString());
            carregarProdutos();
        }
    }//GEN-LAST:event_jcbCampoOrdemItemStateChanged

    private void jcbOrdemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbOrdemItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            EProp.setProp("etiquetas.ordenar.tipo", jcbOrdem.getSelectedItem().toString());
            carregarProdutos();
        }
    }//GEN-LAST:event_jcbOrdemItemStateChanged

    private void jcbFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFiltroItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            EProp.setProp("etiquetas.filtro", jcbFiltro.getSelectedItem().toString());
            carregarProdutos();
        }
    }//GEN-LAST:event_jcbFiltroItemStateChanged

    private void jcbExibirProdutosBarrasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbExibirProdutosBarrasItemStateChanged

    }//GEN-LAST:event_jcbExibirProdutosBarrasItemStateChanged

    private void jcbExibirProdutosBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbExibirProdutosBarrasActionPerformed
        EProp.setProp("etiquetas.exibir.sembarras", String.valueOf(jcbExibirProdutosBarras.isSelected()));
        carregarProdutos();
    }//GEN-LAST:event_jcbExibirProdutosBarrasActionPerformed

    private void jbBuscarArquivoJasperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarArquivoJasperActionPerformed
        JFileChooser fileChooser = new JFileChooser(".");
        FileFilter jasperFilter = new FileTypeFilter(".jasper", "Arquivo Jasper Studio");
        fileChooser.addChoosableFileFilter(jasperFilter);
        fileChooser.setFileFilter(jasperFilter);
        int status = fileChooser.showOpenDialog(null);
        if (status == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            jtfArquivoJasper.setText(selectedFile.getPath());
            logger.info("Selecionado arquivo:");
            logger.info(selectedFile.getPath());
            logger.info("");
        }
    }//GEN-LAST:event_jbBuscarArquivoJasperActionPerformed

    public void gerarRelatorio(List<ModelEtqProd> lista) {
        new Thread(() -> {
            jbVisualizar.setEnabled(false);
            FrmStatusProgress progress = new FrmStatusProgress(null, false);
            progress.setName("Gerando etiquetas, aguarde...");
            progress.setVisible(true);
            try {

                JasperPrint jp = Util.getJasperPrintEtq(lista);
                MyJRViewer jv = new MyJRViewer(jp);

                JDialog dialog = new JDialog(new JFrame(), "Etiquetas para produtos", true);

                GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
                Rectangle screenRect = ge.getMaximumWindowBounds();
                int width = screenRect.width;
                int height = screenRect.height;
//                jv.setSize(width, height);
                dialog.setIconImage(null);
                dialog.setSize(width, height);
                dialog.setLocationRelativeTo(null);
                dialog.setResizable(true);
                dialog.getContentPane().add(jv);
                progress.dispose();
                jbVisualizar.setEnabled(true);
                dialog.setVisible(true);
            } catch (Exception ex) {
                progress.dispose();
                jbVisualizar.setEnabled(true);
                JOptionPane.showMessageDialog(rootPane, "Ocorreu uma falha durante a exibição dos dados!\n" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }).start();
    }

    public void carregarProdutos() {
        try {
            DefaultTableModel tabela = (DefaultTableModel) jTable1.getModel();
            tabela.setRowCount(0);

            String buscar = jtfPesquisar.getText().trim();

            StringBuilder query = new StringBuilder();
            query.append("select IDPRODUTO, BARRAS, DESCRICAO, VLR_VENDA from PRODUTOS ");
            query.append("where FORADELINHA = 'N' and SERVICO = 'N' ");
            query.append("and IDEMPRESA = '").append(EProp.prop().getInt("etiquetas.empresa", 1)).append("' ");

            if (!jcbExibirProdutosBarras.isSelected()) {
                query.append("and BARRAS <> '' ");
            }

            if (StringUtils.isNotBlank(buscar)) {

                switch (jcbFiltro.getSelectedItem().toString()) {
                    case "Código":
                        if (!buscar.replaceAll(("\\D"), "").equals("")) {
                            query.append("and IDPRODUTO = ").append(buscar.replaceAll(("\\D"), "")).append(" ");
                        }
                        break;
                    case "Descrição":
                        query.append("and UPPER(DESCRICAO) like '%").append(buscar.toUpperCase()).append("%' ");
                        break;
                }

            }

//            Código
//            Descrição
//            Estoque Maior
//            Valor de Venda
            query.append("order by ");

            switch (jcbCampoOrdem.getSelectedItem().toString()) {
                case "Código":
                    query.append("IDPRODUTO ");
                    break;
                case "Descrição":
                    query.append("DESCRICAO ");
                    break;
                case "Estoque":
                    query.append("EST_ATUAL ");
                    break;
                case "Valor de Venda":
                    query.append("VLR_VENDA ");
                    break;
            }

            int ASCDESC = jcbOrdem.getSelectedIndex();

            if (ASCDESC == 0) {
                query.append("ASC");
            } else {
                query.append("DESC");
            }

            System.out.println(query.toString());

            Connection conn = new Database().getConnection();
            PreparedStatement pst = conn.prepareStatement(query.toString());
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                tabela.addRow(new String[]{rs.getString("IDPRODUTO"), rs.getString("BARRAS"), rs.getString("DESCRICAO"), rs.getString("VLR_VENDA")});
            }
            rs.close();
            pst.close();
            conn.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void formatoQtdItem() {
        if (jTable2.getSelectedRow() >= 0) {
            int linha = jTable2.getSelectedRow();
            String obj = (String) jTable2.getValueAt(linha, 4);
            jTable2.setValueAt(obj, linha, 4);
        }
    }

    private void getEmpresas(final int selecionar) {
        new Thread(() -> {
            logger.info("# Carregando empresas no sistema, aguarde...");
            List<ModelEmpresa> empresas = new ControllerData().getEmpresas();
            jcbEmpresa.removeAllItems();
            empresas.stream().map(e -> {
                jcbEmpresa.addItem(e);
                return e;
            }).filter(e -> e.getId() == selecionar).forEach(e -> {
                jcbEmpresa.setSelectedItem(e);
            });
            logger.info("# Empresas carregadas com sucesso.");
        }).start();
    }

    private void exitSystem() {
        int confirm = JOptionPane.showConfirmDialog(this, "Deseja realmente sair do sistema?", "Sair", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }

    class UpperCase extends PlainDocument {

        @Override
        public void replace(int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
            if (text != null) {
                text = text.toUpperCase();
            }
            super.replace(offset, length, text, attrs);
        }
    }

    private void changeTheme(String theme) {
        if (theme.equals("Dark")) {
            EProp.setProp("tema", "Dark");
            FlatOneDarkIJTheme.install();
        } else if (theme.equals("Light")) {
            EProp.setProp("tema", "Light");
            FlatIntelliJLaf.install();
        }

        for (Window window : Window.getWindows()) {
            SwingUtilities.updateComponentTreeUI(window);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAdicionar_Todos;
    private javax.swing.JButton jbBuscarArquivoJasper;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbRemover;
    private javax.swing.JButton jbRemover_Todos;
    private javax.swing.JButton jbSalvarOpc;
    private javax.swing.JButton jbVisualizar;
    private javax.swing.JButton jbVisualizar1;
    private javax.swing.JComboBox<String> jcbCampoOrdem;
    private javax.swing.JComboBox<ModelEmpresa> jcbEmpresa;
    private javax.swing.JCheckBox jcbExibirProdutosBarras;
    private javax.swing.JComboBox<String> jcbFiltro;
    private javax.swing.JComboBox<String> jcbImpressoras;
    private javax.swing.JComboBox<String> jcbOrdem;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JRadioButtonMenuItem jrbmDark;
    private javax.swing.JRadioButtonMenuItem jrbmLight;
    private javax.swing.JTextField jtfArquivoJasper;
    private javax.swing.JTextField jtfPesquisar;
    // End of variables declaration//GEN-END:variables

}
